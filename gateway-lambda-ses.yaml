Parameters:
  ApiKeyValue:
    Type: String
    ConstraintDescription: ^.{20}$
    Description: Enter apa key (20 symbols)
    Default: "wJxaOifPwizKG5cNIoVQa550FvS1zIvRjLqgpBd0"
  ResourcesNameValue:
    Type: String
    Description: Enter resources name ({name}-gateway)
    Default: "pustrik"
  StageName:
    Type: String
    Description: Enter stage name
    Default: "dev"
  BucketName:
    Type: String
    Description: Enter bucket name
    Default: "pustrik-bucket"
  MailName:
    Type: String
    Description: Enter email
    Default: "dmitrypustovalov2000@gmail.com"

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonSESFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Policies:
        - PolicyName: LambdaSESPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                Resource: "*"

  ApiInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ApiLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*"

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${ResourcesNameValue}-gateway"
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub "${ResourcesNameValue}-key"
      Value: !Ref ApiKeyValue
      Enabled: true

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: parse-data

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: true
      AuthorizationType: NONE
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiResource
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt ApiLambda.Arn

  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiMethod
    Properties:
      RestApiId: !Ref ApiGateway

  ApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: !Ref StageName
      DeploymentId: !Ref ApiDeployment

  ApiLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${ResourcesNameValue}-lambda"
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          EMAIL: !Ref MailName
      Handler: index.handler
      Runtime: nodejs18.x
      Role: !GetAtt LambdaRole.Arn
      MemorySize: 128
      Code:
        S3Bucket: !Ref BucketName
        S3Key: code/index.zip

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn:
      - ApiStage
    Properties:
      UsagePlanName: !Sub "${ResourcesNameValue}-usage-plan"
      ApiStages:
        - ApiId: !Ref ApiGateway
          Stage: !Ref StageName
      Quota:
        Limit: 5
        Period: DAY
      Throttle:
        BurstLimit: 10
        RateLimit: 10

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: "API_KEY"
      UsagePlanId: !Ref UsagePlan

  EmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref MailName
